name: CI/CD

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Black & isort
        run: |
          cd backend
          pip install --upgrade pip
          pip install black isort
      - name: Run Black
        run: |
          cd backend
          black --check .
      - name: Run isort
        run: |
          cd backend
          isort --check-only .

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: lint-backend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install backend deps
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Run pytest
        run: |
          cd backend
          pytest --maxfail=1 --disable-warnings -q

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: lint-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run Jest
        run: |
          cd frontend
          npm test -- --ci --reporters=default

  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs:
      - test-backend
      - test-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Backend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: backend/Dockerfile
          push: false
          tags: webot-chatflow-backend:pr-${{ github.event.number }}
      - name: Build Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: frontend/Dockerfile
          push: false
          tags: webot-chatflow-frontend:pr-${{ github.event.number }}
