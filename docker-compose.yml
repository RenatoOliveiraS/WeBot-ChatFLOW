version: '3.8'

# Declaração de redes
networks:
  webot-network:
    driver: bridge

# Declaração de volumes
volumes:
  postgres_data:
  redis_data:

services:
  backend:
    build:
      context: .
      dockerfile: backend/app/Dockerfile
    image: webot-backend:dev
    env_file:
      - ./.env
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      REDIS_URL: "${REDIS_URL}"
      SECRET_KEY: "${SECRET_KEY}"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - webot-network
    volumes:
      - ./backend/app:/app

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: webot-frontend:dev
    env_file:
      - ./.env
    ports:
      - "3000:5173"
    depends_on:
      - backend
    networks:
      - webot-network
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    image: postgres:14
    container_name: webot-postgres
    env_file:
      - ./.env            
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-webot}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-secret}"
      POSTGRES_DB: "${POSTGRES_DB:-webot_db}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data   
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-webot}"]
      interval: 10s
      retries: 5
    networks:
      - webot-network    

  redis:
    image: redis:7-alpine
    restart: always
    env_file:
      - ./.env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webot-network
